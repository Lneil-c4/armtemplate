//az deployment group create --name testarmvm  --resource-group NeilLorca-3CMS --template-file vmbuildwithbackup.json --parameters vmbuildwithbackup.parameters.json --mode Incremental --verbose
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v5",
            "metadata": {
                "description": "Virtual Machine Size"
            }
        },
        "rgName": {
            "type": "string",
            "metadata": {
                "description": "Resource Group Name"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Machine Name"
            }
        },
        "osVersion": {
            "type": "string",
            "defaultValue": "2022-datacenter-azure-edition",
            "allowedValues": [
                "2022-datacenter-azure-edition",
                "2022-datacenter-azure-edition-core",
                "2022-datacenter-azure-edition-core-smalldisk",
                "2022-datacenter-azure-edition-smalldisk",
                "2022-datacenter-core-g2",
                "2022-datacenter-core-smalldisk-g2",
                "2022-datacenter-g2",
                "2022-datacenter-smalldisk-g2"
            ],
            "metadata": {
                "description": "The VM Operating System"
            }
        },
        "OSdiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "metadata": {
                "description": "Local Disk C (Operating System) disk type"
            }
        },
        /*"enableBackup": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Backup of the VM"
            }
        },*/
        "jiraReqNum": {
            "type": "string",
            "metadata": {
                "description": "Jira Request Number (Optional)"
            }
        },
        "adminAccntName": {
            "type": "string",
            "metadata": {
                "description": "VM Administrator account name"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "VM Administrator Password"
            }
        },
        /*"vmLocation": {
            "type": "string",
            "metadata": {
                "description": "Virtual Machine Location"
            }
        },*/
        "vNetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('rgName'), '-vNet')]"
        },
        "vNetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Address Prefix"
            }
        },
        "vNetSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Subnet Name"
            }
        },
        "vNetSubnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Subnet Prefix"
            }
        },
        "enableHotpatching": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable Hotpatching"
            }
        },
        "patchMode": {
            "type": "string",
            "defaultValue": "Manual",
            "metadata": {
                "description": "Patch Mode (Manual, AutomaticByOS, AutomaticByPlatform)"
            }
        },
        "recoveryServicesVaultName": {
            "type": "string",
            "metadata": {
                "description": "Recovery Services Vault Name"
            }
        },
        "loganalytics": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace to be used by extension"
            }
        }
    },

    "functions": [],

    "variables": {
        "adminAccountName": "[parameters('adminAccntName')]",
        "adminPassword": "[parameters('adminPassword')]",
        "nsgName": "[concat('nsg-', parameters('vmName'))]",
        "tags": {
            "Jira Req #": "[parameters('jiraReqNum')]"
        },
        //"vnetName": "[concat(parameters('rgName'), '-vNet')]",
        "vNetAddressPrefix": "[parameters('vNetAddressPrefix')]",
        "vNetSubnetName": "[parameters('vNetSubnetName')]",
        "vNetSubnetPrefix": "[parameters('vNetSubnetPrefix')]",
        "nicName": "[concat(parameters('vmName'), '-nic', uniqueString(resourceGroup().id))]",
        "encryptionAtHost": "true",
        "managedIdentity": "SystemAssigned",
        "securityType": "TrustedLaunch",
        "backupFabric": "Azure",
        "containerType": "iaasvmcontainer",
        "regionCode": "[substring(parameters('vmName'), 3, 4)]",
        "region": "[if(equals(variables('regionCode'), 'SCUS'), 'South Central US', if(equals(variables('regionCode'), 'UKS'), 'UK South', if(equals(variables('regionCode'), 'EAST'), 'East US', if(equals(variables('regionCode'), 'WEUR'), 'West Europe', 'East US'))))]"
    },

    "resources": [
        { 
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[variables('nsgName')]",
            "location": "[variables('region')]",
            "properties": {
                "securityRules": []

            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('vNetName')]",
            "location": "[variables('region')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefix')]"
                    ]
                }
                /*"subnets": [
                    {
                        "name": "[variables('vNetSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vNetSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]*/
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('vNetName'), '/', parameters('vNetSubnetName'))]",
            "properties": {
                "addressPrefix": "[parameters('vNetSubnetPrefix')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[variables('nicName')]",
            "location": "[variables('region')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet":
                            {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), variables('vNetSubnetName'))]"
                                }
                            }
                        }
                    ],
                    "networkSecurityGroup" : { //NSG assignment
                        "id" : "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                    },
                    "enableAcceleratedNetworking": true
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
                        ]
                    },
        { //virtual machine creation
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('vmName')]",
            "location": "[variables('region')]",
            "tags": {
                "Jira Req #": "[parameters('jiraReqNum')]"
            },
            "identity": {
                "type": "[variables('managedIdentity')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[variables('adminAccountName')]",
                    "adminPassword": "[variables('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": false,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": "[parameters('enableHotpatching')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('osVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(parameters('vmName'), '-osdisk-', uniqueString(resourceGroup().id))]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('OSdiskType')]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "securityProfile": {
                    "securityType": "[variables('securityType')]",
                    "encryptionAtHost": "[variables('encryptionAtHost')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('recoveryServicesVaultName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServicesVaultName'), 'EnhancedPolicy')]"
                //"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), variables('vNetSubnetName'))]"//added
            ]
        },
        //backup
        {
            "name": "[parameters('recoveryServicesVaultName')]",
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2024-04-01",
            "location" : "[variables('region')]",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
                "publicNetworkAccess": "Enabled"
            }
        },
        { //backup policy
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('recoveryServicesVaultName'), '/EnhancedPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('recoveryServicesVaultName'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "policyType": "V2",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicyV2",
                    "scheduleRunFrequency": "Hourly",
                    "hourlySchedule": {
                        "interval": 4,
                        "scheduleWindowStartTime": "2025-02-12T08:00:00Z",
                        "scheduleWindowDuration": 12
                    }
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2025-02-12T08:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 1
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('recoveryServicesVaultName'), '/Azure/iaasvmcontainer;iaasvmcontainerv2;', parameters('rgName'), ';', parameters('vmName'), '/vm;iaasvmcontainerv2;', parameters('rgName'), ';', parameters('vmName'))]",
            "location" : "[variables('region')]",
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "sourceResourceId": "[resourceId(subscription().subscriptionId, parameters('rgName'),'Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServicesVaultName'), 'EnhancedPolicy')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServicesVaultName'), 'EnhancedPolicy')]",
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('recoveryServicesVaultName'))]"
            ]
        },
        //installing extension
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('vmName'), '/AzureMonitorWindowsAgent')]",
            "location": "[variables('region')]",
            "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true
                },
                "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('vmName'), '/GuestConfiguration')]",
            "location": "[variables('region')]",
            "properties": {
                "publisher": "Microsoft.GuestConfiguration",
                "type": "ConfigurationForWindows",
                "typeHandlerVersion": "1.29",
                "autoUpgradeMinorVersion": true
                },
                "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    ]
        },
        {
            //https://github.com/azsec/scaf-azure-arm-templates/issues/3
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('vmName'), '/MDE.Windows')]",
            "location": "[variables('region')]",
            "properties": {
                "publisher": "Microsoft.Azure.AzureDefenderForServers",
                "type": "MDE.Windows",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "forceReOnboarding": false,
                    "vNextEnabled": false,
                    "azureResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                    "defenderForServersWorkspaceId": "[parameters('loganalytics')]",
                    "WdatpConfiguration": {
                        "onboardingMode": "Automatic"
                        }
                    },
                    "protectedSettings": {
                        "defenderForEndpointOnboardingScript": "[reference(subscriptionResourceId('Microsoft.Security/mdeOnboardings', 'Windows'), '2021-10-01-preview', 'full').properties.onboardingPackageWindows]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                        ]
        }
            ],

    "outputs": {}
}
/*{
  "type": "Microsoft.Compute/virtualMachines/extensions",
  "apiVersion": "2024-07-01",
  "name": "[concat(parameters('vmName'), '/MDE.Windows')]",
  "location": "[variables('region')]",
  "properties": {
    "publisher": "Microsoft.Azure.AzureDefenderForServers",
    "type": "MDE.Windows",
    "typeHandlerVersion": "1.0",
    "autoUpgradeMinorVersion": true,
    "settings": {
      "WdatpConfiguration": {
        "onboardingMode": "Automatic",
        "groupIdentifier": "" // Optional
      }
    }
  },
  "dependsOn": [
    "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
  ]
}*/